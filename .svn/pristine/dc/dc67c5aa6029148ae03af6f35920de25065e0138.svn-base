<?php
/**
 * @link      http://github.com/zendframework/ZendSkeletonApplication for the canonical source repository
 * @copyright Copyright (c) 2005-2016 Zend Technologies USA Inc. (http://www.zend.com)
 * @license   http://framework.zend.com/license/new-bsd New BSD License
 */

namespace Home\Controller;
use Zend\Db\Adapter\Adapter;
use Zend\Mvc\Controller\AbstractActionController;
use Zend\View\Model\ViewModel;
use Admin\Model\User;
use Model\Base\BaseController;
use Zend\View\Model\JsonModel;
use Zend\Crypt\Password\Bcrypt;
use Zend\Session\Container;

class IndexController extends BaseController
{

    public function indexAction()
    {
        /*查看用户是否登录*/
        $user_session = new Container('user');
        $userId = $user_session->userId;
        $userName = $user_session->userName;
        
        $userModel = new User($this->getDbAdapter());
        $ret = $userModel->getWebSetting();
        if(!$ret['result']){
            $response = $this->getResponse();
            $response->getHeaders()->addHeaderLine('Location', "../../../../../html/common/404.html");
            $response->setStatusCode(302);
            return $response;//重定向到404页面
        }
        if(count($ret['msg']) == 0){
            $ret['msg'][0] = array(
                'web_logo'=>"/logo.jpg",
                "web_title"=>"课程设计",
                "web_keyword"=>"",
                "web_keycontent"=>"",
                "web_num"=>""
            );
        }
        $picret = $userModel->getFrontPic();
        if(!$picret['result']){
            $response = $this->getResponse();
            $response->getHeaders()->addHeaderLine('Location', "../../../../../html/common/404.html");
            $response->setStatusCode(302);
            return $response;//重定向到404页面
        }
        $arr = array("islogin"=>true,'setting'=>$ret['msg'][0],'pic'=>$picret['msg']);
        if(isset($userId)){
            /*若已登录，则显示用户昵称*/
            $arr["userName"] = $userName;
            $view = new ViewModel($arr);          //实例化模型
            return $view;
        }
        else{
            $arr['islogin'] = false;
            $view = new ViewModel($arr);          //实例化模型
            return $view;
        }
    }
    /* 
     * 登陆功能
     *  */
    public function loginAction(){
        try {
            if($this->getRequest()->isPost()){

                $username = $_POST['username'];
                $password = $_POST['password'];
                $ret = array();
                if (!isset($username) || $username == "") {
                    return new JsonModel(array('result'=>false,"msg"=>"用户名为空"));
                }
                
                if (!$this->checkMain("email", $username)) {
                    return new JsonModel(array('result'=>false,"msg"=>"用户名格式不正确"));
                }
                
                if (!isset($password) || $password == "") {
                    return new JsonModel(array('result'=>false,"msg"=>"请输入密码"));
                }
                if (!$this->checkMain("password", $password)) {
                    return new JsonModel(array('result'=>false,"msg"=>"密码格式不正确"));
                }
                $user = new User($this->getDbAdapter());
                $userRet = $user->selectUser($username);
                if(!$userRet['result'] || 0 == count($userRet['msg'])){
                    return new JsonModel(array('result'=>false,"msg"=>"账号不存在"));
                }
                $bcrypt = new Bcrypt();
                $ret=$bcrypt->verify($password, $userRet['msg'][0]['password']);
                if($ret){
                    /* 设置用户的session */
                    $user_session = new Container('user');
                    $user_session->userId = $userRet['msg'][0]['u_id'];
                    $user_session->userName = substr($username, 0, strpos($username, '@'));
                    return new JsonModel(array('result'=>true,"msg"=>"成功登陆"));
                }
                else{
                    return new JsonModel(array('result'=>true,"msg"=>"密码错误"));
                }
            }else{
                $response = $this->getResponse();
                $response->getHeaders()->addHeaderLine('Location', "../../../../../html/common/404.html");
                $response->setStatusCode(302);
                return $response;//重定向到404页面
            }
        } catch (\Exception $e) {
            return new JsonModel(array('result' => false,'msg' => '异常' . $e->getMessage()));
        }
    }
    /* 
     * 注册功能
     *  */
    public function registerAction(){
        try {
            if($this->getRequest()->isPost()){
                $username=$_POST['email'];
                $password1=$_POST['password1'];
                $password2=$_POST['password2'];
                
                if (!$this->checkMain('email',$username)){
                    return new JsonModel(array('result' => false,'msg' => '异常:请输入正确的邮箱'));
                }
                if (!$this->checkMain('password',$password1)){
                    return new JsonModel(array('result' => false,'msg' => '异常:密码需要大小写字母跟数字组成并且长度在6-16字符'));
                }
                if (!$this->checkMain('password',$password2)){
                    return new JsonModel(array('result' => false,'msg' => '异常:密码需要大小写字母跟数字组成并且长度在6-16字符'));
                }
                if($password1!=$password2){
                    return new JsonModel(array('result' => false,'msg' => '异常:两次输入的密码不一致'));
                }

                $user = new User($this->getDbAdapter());
                $checkRet = $user->selectUser($username);
                if(!$checkRet['result']){
                    return new JsonModel(array('result' => false,'msg' => '异常:请刷新页面重试ERR001'));
                }
                if(1 == count($checkRet['msg'])){
                    return new JsonModel(array('result' => false,'msg' => '用户名已存在'));
                }
                $bcrypt = new Bcrypt();
                $password=$bcrypt->create($password1);
                $userRet = $user->registerUser($username,$password);
                if($userRet){
                    /* 设置用户的session */
                    $user_session = new Container('user');
                    $user_session->userId = $userRet['msg'];
                    $user_session->userName = substr($username, 0, strpos($username, '@'));
                    return new JsonModel(array('result' => true,'msg' => '注册成功'));  
                }else{
                    return new JsonModel(array('result' => false,'msg' => '注册失败，请重新注册'));
                }
            }else{
                $response = $this->getResponse();
                $response->getHeaders()->addHeaderLine('Location', "../../../../../html/common/404.html");
                $response->setStatusCode(302);
                return $response;//重定向到404页面
            }
        } catch (\Exception $e) {
            return new JsonModel(array('result' => false,'msg' => '异常' . $e->getMessage()));
        }
    }
    
}
